@* <!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Website Analytics</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <canvas id="myChart"></canvas>
    <script>
        const ctx = document.getElementById('myChart').getContext('2d');
        const myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: [
                    'Approved',
                    'Pending',
                    'Rejected'
                ],
                datasets: [{
                    label: 'Approval Status',
                    data: [3, 2, 5],
                    borderColor: 'rgba(75, 192, 192, 1)',
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
</body>
</html> *@

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div style="width: 70%;">
    <canvas id="myChart"></canvas>
</div>

<script>
    // Retrieve the JSON object from the ViewBag
    var chartData = @Html.Raw(ViewBag.ChartData);

    // Process the chart data
    var labels = [];
    var approvedCount = 0;
    var rejectedCount = 0;

    for (var i = 0; i < chartData.length; i++) {
        if (chartData[i].ApprovalStatus) {
            approvedCount++;
        } else {
            rejectedCount++;
        }
    }

    labels.push('Approved', 'Rejected');

    // Use the processed data to create the chart
    const ctx = document.getElementById('myChart').getContext('2d');
    const myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: labels,
            datasets: [{
                label: 'Approval Status',
                data: [approvedCount, rejectedCount],
                backgroundColor: [
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(255, 99, 132, 0.2)'
                ],
                borderColor: [
                    'rgba(75, 192, 192, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(255, 99, 132, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script>